---
title: "Temporality of variables"
editor_options: 
  chunk_output_type: console
---

```{r library}
#| cache: false
#| echo: false
#| warning: false

library(tidyverse)
library(lubridate)
library(brms)
library(purrr)
library(dplyr)
library(Utilities.Package)
```

```{r Open Chlorophyll}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

# Read in
df_chla <- read.csv("Data/Variables_values/Monthly_Chl_boxes.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  pivot_longer(-Date, names_to = "metric", values_to = "values") %>% 
  mutate(Box = gsub(".*_","",metric),
         Metric = case_when(str_detect(metric,"GEOM") ~ "GeoMean_Chla",
                            T ~ "STD_Chla")) %>% 
  select(-metric) %>% 
  pivot_wider(names_from = Metric, values_from = values) %>% 
  mutate(Box = case_when(Box == "Adriatico" ~ "Adriatic",
                         Box == "Chipre" ~ "Cyprus",
                         T ~ "Lyon"))


```

```{r Open HF}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

df_HF_Adriatic <- read.csv("Data/Variables_values/Monthly_HF_Adriatic.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_HF_Lyon <- read.csv("Data/Variables_values/Monthly_HF_Lyon.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")

df_HF_Chipre <- read.csv("Data/Variables_values/Monthly_HF_Cyprus.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_HF <- rbind(df_HF_Adriatic,df_HF_Lyon,df_HF_Chipre)

rm(df_HF_Adriatic)
rm(df_HF_Lyon)
rm(df_HF_Chipre)


```

```{r Open MLD}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

df_MLD_Adriatic <- read.csv("Data/Variables_values/Monthly_MLD_Adriatic.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_MLD_Lyon <- read.csv("Data/Variables_values/Monthly_MLD_Lyon.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")%>% 
  rename(MLD="MLD_mean")

df_MLD_Chipre <- read.csv("Data/Variables_values/Monthly_MLD_Cyprus.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_MLD <- rbind(df_MLD_Lyon,df_MLD_Adriatic,df_MLD_Chipre)

rm(df_MLD_Adriatic)
rm(df_MLD_Lyon)
rm(df_MLD_Chipre)

```

```{r Open NH4}
#| cache: false
#| echo: false
#| eval: true
#| warning: false


df_NH4_Adriatic <- read.csv("Data/Variables_values/Monthly_NH4_Adriatic_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_NH4_Lyon <- read.csv("Data/Variables_values/Monthly_NH4_Lyon_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")

df_NH4_Chipre <- read.csv("Data/Variables_values/Monthly_NH4_Cyprus_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_NH4 <- rbind(df_NH4_Lyon,df_NH4_Adriatic,df_NH4_Chipre)

rm(df_NH4_Adriatic)
rm(df_NH4_Lyon)
rm(df_NH4_Chipre)

```

```{r Open NO3}
#| cache: false
#| echo: false
#| eval: true
#| warning: false


df_NO3_Lyon <- read.csv("Data/Variables_values/Monthly_NO3_Lyon_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")

df_NO3_Adriatic <- read.csv("Data/Variables_values/Monthly_NO3_Adriatic_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_NO3_Chipre <- read.csv("Data/Variables_values/Monthly_NO3_Cyprus_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_NO3 <- rbind(df_NO3_Adriatic,df_NO3_Lyon,df_NO3_Chipre)

rm(df_NO3_Lyon)
rm(df_NO3_Adriatic)
rm(df_NO3_Chipre)

```

```{r Open PO4}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

df_PO4_Lyon <- read.csv("Data/Variables_values/Monthly_PO4_Lyon_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")

df_PO4_Adriatic <- read.csv("Data/Variables_values/Monthly_PO4_Adriatic_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_PO4_Chipre <- read.csv("Data/Variables_values/Monthly_PO4_Cyprus_for_MLD.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_PO4 <- rbind(df_PO4_Lyon,df_PO4_Adriatic,df_PO4_Chipre)

rm(df_PO4_Lyon)
rm(df_PO4_Adriatic)
rm(df_PO4_Chipre)

```

```{r Open SSS}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

df_SSS_Lyon <- read.csv("Data/Variables_values/Monthly_SSS_Lyon.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Lyon")

df_SSS_Adriatic <- read.csv("Data/Variables_values/Monthly_SSS_Adriatic.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Adriatic")

df_SSS_Chipre <- read.csv("Data/Variables_values/Monthly_SSS_Cyprus.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  mutate(Box = "Cyprus")

df_SSS <- rbind(df_SSS_Lyon,df_SSS_Adriatic,df_SSS_Chipre)

rm(df_SSS_Lyon)
rm(df_SSS_Adriatic)
rm(df_SSS_Chipre)

```

```{r Open SST}
#| cache: false
#| echo: false
#| eval: true
#| warning: false

df_SST <- read.csv("Data/Variables_values/Monthly_SST_boxes.csv", stringsAsFactors = FALSE) %>% 
  mutate(Date = dmy(Date)) %>% 
  as_tibble() %>% 
  pivot_longer(-Date, names_to = "metric", values_to = "values") %>% 
  mutate(Box = gsub(".*_","",metric),
         Metric = "SST") %>% 
  select(-metric) %>% 
  pivot_wider(names_from = Metric, values_from = values) %>% 
  mutate(Box = case_when(Box == "Adriatico" ~ "Adriatic",
                         Box == "Chipre" ~ "Cyprus",
                         T ~ "Lyon"))
```

```{r stack all}
#| echo: false
#| message: false
#| warning: false
#| cache: false
#| eval: true


df_chla <- df_chla %>% 
  dplyr::filter(Date >= min(df_HF$Date), 
                Date <= max(df_HF$Date))

df <- df_chla %>%
  left_join(df_SST,  by = c("Box", "Date")) %>%
  left_join(df_SSS,  by = c("Box", "Date")) %>%
  left_join(df_PO4,  by = c("Box", "Date")) %>%
  left_join(df_NO3,  by = c("Box", "Date")) %>%
  left_join(df_NH4,  by = c("Box", "Date")) %>%
  left_join(df_MLD,  by = c("Box", "Date")) %>%
  left_join(df_HF,   by = c("Box", "Date")) %>% 
  mutate(NPratio = (NO3+NH4)/PO4,
         TotalNutrient = NO3+NH4+PO4,
         Box = as.factor(Box)) %>% 
  pivot_longer(-c(Date,Box), names_to = "Metric", values_to = "Value") %>% 
  group_by(Metric, Box) %>% 
  mutate(Value = scales::squish(Value, c(stats::quantile(Value, probs = 0.01),stats::quantile(Value, probs = 0.99))))%>% 
  ungroup()



write.csv(df,"Data/df.all.csv", row.names = F)

# df %>% 
#   # dplyr::filter(Date >= date_min, 
#                 # Date <= date_max) %>% 
#   ggplot(aes(x = Date, y = Value, color = Box, group = Box))+
#   geom_point()+
#   geom_line()+
#   # geom_smooth(method = "gam")+
#   facet_wrap(~Metric,scales = "free")+
#   theme_bw()

df_wide <- df %>% 
  pivot_wider(names_from = Metric,values_from = Value)

# pairs(df_wide %>% dplyr::select(-Box))
colscale <- c("Adriatic" = "#4F8EB1","Lyon" = "#F6F9A0","Cyprus" = "#223F8D")

```

## Times series of variables

```{r plot time series}
#| echo: false
#| warning: false
#| fig-cap: "Times series of each environmental variables since 1999 at the three study sites."
#| label: fig-TimeSeries_All
#| out-width: "99%"
#| fig-height: 10

df %>% 
  dplyr::filter(Metric != "STD_Chla",
                Metric != "SSS") %>% 
  ggplot(aes(x = Date, y =  Value, color = Box))+
  geom_line()+
  facet_wrap(~Metric, scales = "free", ncol = 3)+
  theme_minimal()+
  scale_color_manual(values = colscale)

```

## Seasonality of Variables
```{r plot Seasonality of variable}
#| echo: false
#| message: false
#| warning: false
#| cache: false
#| eval: false


bin_size <- 10        # days per bin  (change to 30 for months, etc.)

plot_seas <- df %>% 
  filter(Metric %in% c("GeoMean_Chla","MLD","NPratio","SST","TotalNutrient")) %>% 
  mutate(
    day      = yday(Date),
    bin      = (day - 1) %/% bin_size * bin_size + bin_size/2,
    Metric = case_when(Metric == "GeoMean_Chla" ~ "Chlorophyll-a",
                       Metric == "MLD" ~ "Mixed Layer Depth",
                       Metric == "NPratio" ~ "NO3:PO4",
                       Metric == "TotalNutrient" ~ "Total Nutrient",
                       T ~ Metric)# mid-point
  ) %>% 
  group_by(Metric, Box, day) %>% 
  summarise(
    mn = mean(Value, na.rm = TRUE),
    p25= quantile(Value, .25, na.rm = TRUE),
    p75= quantile(Value, .75, na.rm = TRUE),
    .groups = "drop"
  ) %>% 
  ggplot(aes(day, mn, colour = Box)) +
  geom_smooth(method = "gam") +
  geom_point(size = 1.4) +  
  geom_linerange(aes(ymin = p25, ymax = p75), linewidth = .8) +

     # keep your smooth
  facet_wrap(~Metric , ncol = 3,scales = "free") +
  scale_colour_manual(values = colscale) +
  scale_x_continuous(
    breaks = seq(0, 345, by = 60),
    labels = month.abb[c(1,3,5,7,9,11)]
  ) +
  labs(x = NULL, y = NULL) +
  theme_Bede() +
  theme(legend.position = "bottom")

ggsave("Outputs/Seasonality_variables.png", dpi = 300)

```

```{r plot Seasonality of variable2}
#| echo: false
#| warning: false
#| fig-cap: "Seasonality of each varibles"
#| label: fig-DOY_All
#| out-width: "100%"

knitr::include_graphics("Outputs/Seasonality_variables.png")

```



## Trends of SST

```{r trends of SST}
#| echo: false
#| warning: false
#| fig-cap: "Trends of SST"
#| label: fig-trends_SST
#| out-width: "99%"

df_wide$Year <- as.numeric(format(df_wide$Date, "%Y")) + (as.numeric(format(df_wide$Date, "%m")) - 1)/12

Clim_SST <- df_wide %>% 
  mutate(month = month(Date)) %>% 
  group_by(month,Box) %>% 
  reframe(med = median(SST))

df_wide_SST <- df_wide %>% 
  dplyr::select(c(Year,Date,Box,SST)) %>% 
  mutate(month = month(Date)) %>% 
  left_join(Clim_SST, by = c("month","Box")) %>%
  mutate(SST = SST - med) %>% 
  dplyr::select(-c(med,month))

fit_SST <- brm(
   SST ~ Year * Box,
  data = df_wide_SST,
  family = gaussian(),  # log link ensures positivity
  chains = 4, cores = 10,
  control = list(adapt_delta = 0.95),
  file = "Data/Model/Environment_Variables/fit_SST_year_glm"
)

conditional_effects(fit_SST, effects = "Year:Box",      
  prob    = 0.80 )[[1]] %>% 
  dplyr::select(c(Year,Box,estimate__, lower__,upper__)) %>% 
  ggplot(aes(x = Year, y = estimate__,ymin=lower__,ymax=upper__, fill = Box))+
  geom_line(color = "black")+
  geom_ribbon(color =NA, alpha = 0.2)+
  facet_wrap(~Box)+
  theme_minimal()+
  scale_fill_manual(values = colscale)+
  theme(legend.position = "top")+
  labs(y = "Anomalies of SST")
  


```

## Trends of Nitrogen/Phosphorus

```{r trends of NPratio}
#| echo: false
#| warning: false
#| fig-cap: "Trends of NPratio"
#| label: fig-trends_NPratio
#| out-width: "99%"

df_wide$Year <- as.numeric(format(df_wide$Date, "%Y")) + (as.numeric(format(df_wide$Date, "%m")) - 1)/12


Clim_NPratio <- df_wide %>% 
  mutate(month = month(Date)) %>% 
  group_by(month,Box) %>% 
  reframe(med = median(NPratio))

df_wide_NPratio <- df_wide %>% 
  dplyr::select(c(Year,Date,Box,NPratio)) %>% 
  mutate(month = month(Date)) %>% 
  left_join(Clim_NPratio, by = c("month","Box")) %>%
  mutate(NPratio = NPratio - med) %>% 
  dplyr::select(-c(med,month))


fit_NPratio <- brm(
  NPratio ~ Year * Box,
  data = df_wide_NPratio,
  family = student(),  # log link ensures positivity
  chains = 4, cores = 10,
  control = list(adapt_delta = 0.95),
  file = "Data/Model/Environment_Variables/fit_NPratio_year_glm"
)

conditional_effects(fit_NPratio, effects = "Year:Box")[[1]] %>% 
  dplyr::select(c(Year,Box,estimate__, lower__,upper__)) %>% 
  ggplot(aes(x = Year, y = estimate__,ymin=lower__,ymax=upper__, fill = Box))+
  geom_line(color = "black")+
  geom_ribbon(color =NA, alpha = 0.2)+
  facet_wrap(~Box)+
  theme_minimal()+
  scale_fill_manual(values = colscale)+
  theme(legend.position = "top")+
  labs(y = "Anomalies of NPratio")
```

## Trends of Total Nutrient Load

```{r trends of TotalNutrient}
#| echo: false
#| warning: false
#| fig-cap: "Trends of TotalNutrient"
#| label: fig-trends_TotalNutrient
#| out-width: "99%"

df_wide$Year <- as.numeric(format(df_wide$Date, "%Y")) + (as.numeric(format(df_wide$Date, "%m")) - 1)/12



Clim_TotalNutrient <- df_wide %>% 
  mutate(month = month(Date)) %>% 
  group_by(month,Box) %>% 
  reframe(med = median(TotalNutrient))

df_wide_TotalNutrient <- df_wide %>% 
  dplyr::select(c(Year,Date,Box,TotalNutrient)) %>% 
  mutate(month = month(Date)) %>% 
  left_join(Clim_TotalNutrient, by = c("month","Box")) %>%
  mutate(TotalNutrient = TotalNutrient - med) %>% 
  dplyr::select(-c(med,month))



fit_TotalNutrient <- brm(
  TotalNutrient ~ Year * Box,
  data = df_wide_TotalNutrient,
  family = student(),  # log link ensures positivity
  chains = 4, cores = 10,
  control = list(adapt_delta = 0.95),
  file = "Data/Model/Environment_Variables/fit_TotalNutrient_year_glm"
)

conditional_effects(fit_TotalNutrient, effects = "Year:Box")[[1]] %>% 
  dplyr::select(c(Year,Box,estimate__, lower__,upper__)) %>% 
  ggplot(aes(x = Year, y = estimate__,ymin=lower__,ymax=upper__, fill = Box))+
  geom_line(color = "black")+
  geom_ribbon(color =NA, alpha = 0.2)+
  facet_wrap(~Box)+
  theme_minimal()+
  scale_fill_manual(values = colscale)+
  theme(legend.position = "top")+
  labs(y = "Anomalies of Nutrient Load")
```

## Trends of PO4

```{r trends of PO4}
#| echo: false
#| warning: false
#| fig-cap: "Trends of PO4"
#| label: fig-trends_PO4
#| out-width: "99%"


df_wide$Year <- as.numeric(format(df_wide$Date, "%Y")) + (as.numeric(format(df_wide$Date, "%m")) - 1)/12

Clim_PO4 <- df_wide %>% 
  mutate(month = month(Date)) %>% 
  group_by(month,Box) %>% 
  reframe(med = median(PO4))

df_wide_PO4 <- df_wide %>% 
  dplyr::select(c(Year,Date,Box,PO4)) %>% 
  mutate(month = month(Date)) %>% 
  left_join(Clim_PO4, by = c("month","Box")) %>%
  mutate(PO4 = PO4 - med) %>% 
  dplyr::select(-c(med,month))


fit_PO4 <- brm(
  PO4 ~ Year * Box,
  data = df_wide_PO4,
  family = student(),  # log link ensures positivity
  chains = 4, cores = 10,
  control = list(adapt_delta = 0.95),
  file = "Data/Model/Environment_Variables/fit_PO4_year_glm"
)

conditional_effects(fit_PO4, effects = "Year:Box")[[1]] %>% 
  dplyr::select(c(Year,Box,estimate__, lower__,upper__)) %>% 
  ggplot(aes(x = Year, y = estimate__,ymin=lower__,ymax=upper__, fill = Box))+
  geom_line(color = "black")+
  geom_ribbon(color =NA, alpha = 0.2)+
  facet_wrap(~Box)+
  theme_minimal()+
  scale_fill_manual(values = colscale)+
  theme(legend.position = "top")+
  labs(y = "Anomalies of PO4 concentration")
```

## Trends of NH4

```{r trends of NH4}
#| echo: false
#| warning: false
#| fig-cap: "Trends of NH4"
#| label: fig-trends_NH4
#| out-width: "99%"

df_wide$Year <- as.numeric(format(df_wide$Date, "%Y")) + (as.numeric(format(df_wide$Date, "%m")) - 1)/12

Clim_NH4 <- df_wide %>% 
  mutate(month = month(Date)) %>% 
  group_by(month,Box) %>% 
  reframe(med = median(NH4))

df_wide_NH4 <- df_wide %>% 
  dplyr::select(c(Year,Date,Box,NH4)) %>% 
  mutate(month = month(Date)) %>% 
  left_join(Clim_NH4, by = c("month","Box")) %>%
  mutate(NH4 = NH4 - med)

fit_NH4 <- brm(
  NH4 ~ Year * Box,,
  data = df_wide_NH4,
  family = student(),  # log link ensures positivity
  chains = 4, cores = 10,
  control = list(adapt_delta = 0.95),
  file = "Data/Model/Environment_Variables/fit_NH4_year_glm"
)

conditional_effects(fit_NH4, effects = "Year:Box")[[1]] %>% 
  dplyr::select(c(Year,Box,estimate__, lower__,upper__)) %>% 
  ggplot(aes(x = Year, y = estimate__,ymin=lower__,ymax=upper__, fill = Box))+
  geom_line(color = "black")+
  geom_ribbon(color =NA, alpha = 0.2)+
  facet_wrap(~Box)+
  theme_minimal()+
  scale_fill_manual(values = colscale)+
  theme(legend.position = "top")+
  labs(y = "Anomalies of NH4 concentration")
```


